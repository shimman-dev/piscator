package piscator

import (
	"fmt"
	"os"

	"github.com/spf13/cobra"
	"github.com/spf13/cobra/doc"
)

var rootCmd = &cobra.Command{
	Use:   "piscator",
	Short: "piscator is a CLT for cloning GitHub repos",
	Long: `Embark on a GitHub voyage, forging repositories like sturdy ships to
conquer the code oceans. Uncover hidden gems, venture into private coves, and
trace the footsteps of fellow sailors. Capture your brave expedition in a
legendary repos.json file or clone your booty fer yourself. Raise the anchor,
set your course, and let the adventure begin!`,
	Run: func(cmd *cobra.Command, args []string) {
		fmt.Println("To see available commands, run 'piscator help'")
	},
}

var generateManCmd = &cobra.Command{
	Use:   "generate-man",
	Short: "Generate the man page for piscator",
	RunE: func(cmd *cobra.Command, args []string) error {
		header := &doc.GenManHeader{
			Title:   "piscator",
			Section: "1",
			Manual:  "User Manuals",
			Source:  "Generated by piscator",
		}

		err := doc.GenManTree(rootCmd, header, "man")
		if err != nil {
			return err
		}

		fmt.Println("Man page generated successfully.")
		return nil
	},
}

func Execute() error {
	if err := rootCmd.Execute(); err != nil {
		fmt.Fprintf(os.Stderr, "Whoops. There was an error while executing your piscator command '%s'", err)
		os.Exit(1)
	}

	return nil
}

func init() {
	rootCmd.AddCommand(generateManCmd)
}
